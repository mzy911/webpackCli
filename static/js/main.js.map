{"version":3,"file":"static/js/main.js","mappings":"yGAGAA,QAAQC,IAAI,KCiDZ,CAAiB,E","sources":["webpack://webpack-cli/./src/index.ts","webpack://webpack-cli/./src/typescript/06 - 声明文件(第三方库).ts"],"sourcesContent":["import ts from \"./typescript/06 - 声明文件(第三方库)\";\n// import main from \"./main\"\n// 对象形式：namespace\nconsole.log(\"ts\", ts);\n// console.log(\"main\", main)\n// console.log(\"jquery\", $)\n// console.log(\"lala\", document.getElementById(\"box\"))\n// 使用全局注入的 jquery\n// $.each([52, 97], function (index, value) {\n//   console.log('jquery', index + ': ' + value)p\n// })\n// 使用全局注入的 lodash\n// console.log('lodash', _)\n// 使用全局注入定义模块的 utils\n// console.log('utils', utils)\n// 解析ts文件\n// console.log('typescript', name)\n// Promise.resolve('ok').then((val) => {\n//   console.log('res', val)\n// })\n// const fn = () => {\n//   return Promise.resolve().then(() => {\n//     return 'resolve'\n//   })\n// }\n// const init = async () => {\n//   const res = await fn()\n//   console.log('res', res)\n// }\n// init()\n// const fn = () => {\n//   return Promise.resolve().then(() => {\n//     return 'resolve'\n//   })\n// }\n// const init = async () => {\n//   const res = await fn()\n//   console.log('res', res)\n// }\n// init()\n","// ********************************  使用第三方库  ********************************  \n// ********************************  使用第三方库  ********************************  \n// ********************************  使用第三方库  ********************************  \n// 1、CDN方式\n//    1.1 html 中直接引入\n//        <script src=\"https://cdn.bootcss.com/jquery/3.3.1/jquery.js\"></script>\n//        <script src=\"./varfile.js\"></script>  // var foo = \"小明\"\n//    1.2 声明全局变量：typings/global.d.ts \n//        declare function jQuery(param: string): void // 函数形式\n//        declare let foo: string // 变量形式\n//    1.3 直接使用\n//        console.log(\"JQuery\", jQuery(\"#box\")) ;\n//        console.log(\"ll\", foo) // \"小明\"\n// 2、import方式\n//    2.1 安装对应的 types 库\n//        pnpm i @types/jquery -D\n//    2.2 声明 declare(防止红色警告线)：types/_missing.ts \n//        declare module \"jquery\"\n//    2.3 直接使用\n//        import jQuery from \"jquery\"\n//        console.log(\"JQuery\", jQuery(\"#box\")) ;\n// 3、自定义全局 \"interface\"\n//    3.1 声明全局变量：typings/module.d.ts\n//        interface Person {\n//          name:string, \n//          age:number\n//        }\n//    3.2 typings/module.d.ts 内不使用 export、export default 导出\n//        const per:Person = {\n//          name: \"上三\",\n//          age: 19\n//        }\n//        console.log(\"per\", per)\n//    3.3 typings/module.d.ts 内使用 export、export default 导出\n//        3.3.1 修改 tscofig.json 的配置\n//              \"baseUrl\": \"./src\", // 跟路径\n//              \"paths\": {\n//                 // 方式一：统一导出\n//                 \"*\": [\"typings/*\"], // import sss from \"文件夹名称\"\n//                 // 方式二：分别导出\n//                 \":module\": [\n//                    \"typings/module.d.ts\" // import sss from \":module\"\n//                    ...\n//                  ], \n//               },\n//        3.3.2 使用\n//              import {Foo, Person} from \":module\"\n//              const per:Person = {\n//                name: \"上三\",\n//                age: 19\n//              }\n//              console.log(\"per\", per)\nexport default {};\n"],"names":["console","log"],"sourceRoot":""}